{"success":true,"Data":{"main":"(function(){function et(t){n.deleteFramebuffer(t.frameBuffer);n.deleteRenderbuffer(t.renderBuffer);n.deleteTexture(t.texture)}function ot(t,i){var r={width:t,height:i,sizeArray:new Float32Array([t,i,t/i]),dtxArray:new Float32Array([1/t,1/i])};return r.frameBuffer=n.createFramebuffer(),r.renderBuffer=n.createRenderbuffer(),r.texture=n.createTexture(),n.bindTexture(n.TEXTURE_2D,r.texture),n.texImage2D(n.TEXTURE_2D,0,n.RGBA,t,i,0,n.RGBA,n.UNSIGNED_BYTE,null),n.texParameteri(n.TEXTURE_2D,n.TEXTURE_WRAP_S,n.CLAMP_TO_EDGE),n.texParameteri(n.TEXTURE_2D,n.TEXTURE_WRAP_T,n.CLAMP_TO_EDGE),n.texParameteri(n.TEXTURE_2D,n.TEXTURE_MAG_FILTER,n.LINEAR),n.texParameteri(n.TEXTURE_2D,n.TEXTURE_MIN_FILTER,n.LINEAR),n.bindFramebuffer(n.FRAMEBUFFER,r.frameBuffer),n.framebufferTexture2D(n.FRAMEBUFFER,n.COLOR_ATTACHMENT0,n.TEXTURE_2D,r.texture,0),n.bindRenderbuffer(n.RENDERBUFFER,r.renderBuffer),n.renderbufferStorage(n.RENDERBUFFER,n.DEPTH_COMPONENT16,t,i),n.framebufferRenderbuffer(n.FRAMEBUFFER,n.DEPTH_ATTACHMENT,n.RENDERBUFFER,r.renderBuffer),n.bindTexture(n.TEXTURE_2D,null),n.bindRenderbuffer(n.RENDERBUFFER,null),n.bindFramebuffer(n.FRAMEBUFFER,null),r}function nt(t,i){var r=n.createShader(t),u;return(n.shaderSource(r,i),n.compileShader(r),!n.getShaderParameter(r,n.COMPILE_STATUS))?(u=n.getShaderInfoLog(r),n.deleteShader(r),console.error(u),null):r}function tt(t,i,r,u){var o=nt(n.VERTEX_SHADER,t),s=nt(n.FRAGMENT_SHADER,i),f,c,e,h;if(o==null||s==null)return null;if(f=n.createProgram(),n.attachShader(f,o),n.attachShader(f,s),n.deleteShader(o),n.deleteShader(s),n.linkProgram(f),!n.getProgramParameter(f,n.LINK_STATUS))return c=n.getProgramInfoLog(f),console.error(c),null;if(r)for(f.uniforms={},e=0;e<r.length;e++)f.uniforms[r[e]]=n.getUniformLocation(f,r[e]);if(u)for(f.attributes={},e=0;e<u.length;e++)h=u[e],f.attributes[h]=n.getAttribLocation(f,h);return f}function b(t){n.useProgram(t);for(var i in t.attributes)n.enableVertexAttribArray(t.attributes[i])}function k(t){for(var i in t.attributes)n.disableVertexAttribArray(t.attributes[i]);n.useProgram(null)}function st(){var f=n.getParameter(n.ALIASED_POINT_SIZE_RANGE),e,o,r;for(i.pointSize={min:f[0],max:f[1]},e=h.sakura_point_vsh,o=h.sakura_point_fsh,t.program=tt(e,o,[\"uProjection\",\"uModelview\",\"uResolution\",\"uOffset\",\"uDOF\",\"uFade\"],[\"aPosition\",\"aEuler\",\"aMisc\"]),b(t.program),t.offset=new Float32Array([0,0,0]),t.fader=u.create(0,10,0),t.numFlowers=1600,t.particles=new Array(t.numFlowers),t.dataArray=new Float32Array(t.numFlowers*8),t.positionArrayOffset=0,t.eulerArrayOffset=t.numFlowers*3,t.miscArrayOffset=t.numFlowers*6,t.buffer=n.createBuffer(),n.bindBuffer(n.ARRAY_BUFFER,t.buffer),n.bufferData(n.ARRAY_BUFFER,t.dataArray,n.DYNAMIC_DRAW),n.bindBuffer(n.ARRAY_BUFFER,null),k(t.program),r=0;r<t.numFlowers;r++)t.particles[r]=new v}function ht(){var o,f;t.area=u.create(20,20,20);t.area.x=t.area.y*i.aspect;t.fader.x=10;t.fader.y=t.area.z;t.fader.z=.1;var s=Math.PI*2,r=u.create(0,0,0),e=0,n=function(){return Math.random()*2-1};for(o=0;o<t.numFlowers;o++)f=t.particles[o],r.x=n()*.3+.8,r.y=n()*.2-1,r.z=n()*.3+.5,u.normalize(r),e=2+Math.random()*1,f.setVelocity(r.x*e,r.y*e,r.z*e),f.setRotation(n()*s*.5,n()*s*.5,n()*s*.5),f.setPosition(n()*t.area.x,n()*t.area.y,n()*t.area.z),f.setEulerAngles(Math.random()*Math.PI*2,Math.random()*Math.PI*2,Math.random()*Math.PI*2),f.setSize(.9+Math.random()*.1)}function ct(){for(var r,e,h,w=Math.PI*2,d=[t.area.x,t.area.y,t.area.z],v=function(n,t,i){Math.abs(n.position[t])-n.size*.5>i&&(n.position[t]>0?n.position[t]-=i*2:n.position[t]+=i*2)},y=function(n,t){n.euler[t]=n.euler[t]%w;n.euler[t]<0&&(n.euler[t]+=w)},s=0;s<t.numFlowers;s++)r=t.particles[s],r.update(f.delta,f.elapsed),v(r,0,t.area.x),v(r,1,t.area.y),v(r,2,t.area.z),y(r,0),y(r,1),y(r,2),r.alpha=1,r.zkey=o.matrix[2]*r.position[0]+o.matrix[6]*r.position[1]+o.matrix[10]*r.position[2]+o.matrix[14];t.particles.sort(function(n,t){return n.zkey-t.zkey});var c=t.positionArrayOffset,l=t.eulerArrayOffset,p=t.miscArrayOffset;for(s=0;s<t.numFlowers;s++)r=t.particles[s],t.dataArray[c]=r.position[0],t.dataArray[c+1]=r.position[1],t.dataArray[c+2]=r.position[2],c+=3,t.dataArray[l]=r.euler[0],t.dataArray[l+1]=r.euler[1],t.dataArray[l+2]=r.euler[2],l+=3,t.dataArray[p]=r.size,t.dataArray[p+1]=r.alpha,p+=2;for(n.enable(n.BLEND),n.blendFunc(n.SRC_ALPHA,n.ONE_MINUS_SRC_ALPHA),e=t.program,b(e),n.uniformMatrix4fv(e.uniforms.uProjection,!1,a.matrix),n.uniformMatrix4fv(e.uniforms.uModelview,!1,o.matrix),n.uniform3fv(e.uniforms.uResolution,i.array),n.uniform3fv(e.uniforms.uDOF,u.arrayForm(o.dof)),n.uniform3fv(e.uniforms.uFade,u.arrayForm(t.fader)),n.bindBuffer(n.ARRAY_BUFFER,t.buffer),n.bufferData(n.ARRAY_BUFFER,t.dataArray,n.DYNAMIC_DRAW),n.vertexAttribPointer(e.attributes.aPosition,3,n.FLOAT,!1,0,t.positionArrayOffset*Float32Array.BYTES_PER_ELEMENT),n.vertexAttribPointer(e.attributes.aEuler,3,n.FLOAT,!1,0,t.eulerArrayOffset*Float32Array.BYTES_PER_ELEMENT),n.vertexAttribPointer(e.attributes.aMisc,2,n.FLOAT,!1,0,t.miscArrayOffset*Float32Array.BYTES_PER_ELEMENT),s=1;s<2;s++)h=s*-2,t.offset[0]=t.area.x*-1,t.offset[1]=t.area.y*-1,t.offset[2]=t.area.z*h,n.uniform3fv(e.uniforms.uOffset,t.offset),n.drawArrays(n.POINT,0,t.numFlowers),t.offset[0]=t.area.x*-1,t.offset[1]=t.area.y*1,t.offset[2]=t.area.z*h,n.uniform3fv(e.uniforms.uOffset,t.offset),n.drawArrays(n.POINT,0,t.numFlowers),t.offset[0]=t.area.x*1,t.offset[1]=t.area.y*-1,t.offset[2]=t.area.z*h,n.uniform3fv(e.uniforms.uOffset,t.offset),n.drawArrays(n.POINT,0,t.numFlowers),t.offset[0]=t.area.x*1,t.offset[1]=t.area.y*1,t.offset[2]=t.area.z*h,n.uniform3fv(e.uniforms.uOffset,t.offset),n.drawArrays(n.POINT,0,t.numFlowers);t.offset[0]=0;t.offset[1]=0;t.offset[2]=0;n.uniform3fv(e.uniforms.uOffset,t.offset);n.drawArrays(n.POINT,0,t.numFlowers);n.bindBuffer(n.ARRAY_BUFFER,null);k(e);n.enable(n.DEPTH_TEST);n.disable(n.BLEND)}function d(t,i,r,u){var f={},o=[\"uResolution\",\"uSrc\",\"uDelta\"],e;return r&&(o=o.concat(r)),e=[\"aPosition\"],u&&(e=e.concat(u)),f.program=tt(t,i,o,e),b(f.program),f.dataArray=new Float32Array([-1,-1,1,-1,-1,1,1,1]),f.buffer=n.createBuffer(),n.bindBuffer(n.ARRAY_BUFFER,f.buffer),n.bufferData(n.ARRAY_BUFFER,f.dataArray,n.STATIC_DRAW),n.bindBuffer(n.ARRAY_BUFFER,null),k(f.program),f}function y(t,r){var u=t.program;b(u);n.uniform3fv(u.uniforms.uResolution,i.array);r!=null&&(n.uniform2fv(u.uniforms.uDelta,r.dtxArray),n.uniform1i(u.uniforms.uSrc,0),n.activeTexture(n.TEXTURE0),n.bindTexture(n.TEXTURE_2D,r.texture))}function p(t){n.bindBuffer(n.ARRAY_BUFFER,t.buffer);n.vertexAttribPointer(t.program.attributes.aPosition,2,n.FLOAT,!1,0,0);n.drawArrays(n.TRIANGLE_STRIP,0,4)}function w(n){k(n.program)}function lt(){var i,n,t=h.fx_common_vsh;n=h.bg_fsh;r.sceneBg=d(t,n,[\"uTimes\"],null);n=h.fx_brightbuf_fsh;r.mkBrightBuf=d(t,n,null,null);n=h.fx_dirblur_r4_fsh;r.dirBlur=d(t,n,[\"uBlurDir\"],null);i=h.pp_final_vsh;n=h.pp_final_fsh;r.finalComp=d(i,n,[\"uBloom\"],null)}function at(){}function vt(){}function yt(){n.disable(n.DEPTH_TEST);y(r.sceneBg,null);n.uniform2f(r.sceneBg.program.uniforms.uTimes,f.elapsed,f.delta);p(r.sceneBg);w(r.sceneBg);n.enable(n.DEPTH_TEST)}function wt(){}function bt(){}function kt(){var u,t,f,e;for(n.disable(n.DEPTH_TEST),u=function(t,i){n.bindFramebuffer(n.FRAMEBUFFER,t.frameBuffer);n.viewport(0,0,t.width,t.height);i&&(n.clearColor(0,0,0,0),n.clear(n.COLOR_BUFFER_BIT|n.DEPTH_BUFFER_BIT))},u(i.wHalfRT0,!0),y(r.mkBrightBuf,i.mainRT),p(r.mkBrightBuf),w(r.mkBrightBuf),t=0;t<2;t++)f=1.5+1*t,e=2+1*t,u(i.wHalfRT1,!0),y(r.dirBlur,i.wHalfRT0),n.uniform4f(r.dirBlur.program.uniforms.uBlurDir,f,0,e,0),p(r.dirBlur),w(r.dirBlur),u(i.wHalfRT0,!0),y(r.dirBlur,i.wHalfRT1),n.uniform4f(r.dirBlur.program.uniforms.uBlurDir,0,f,0,e),p(r.dirBlur),w(r.dirBlur);n.bindFramebuffer(n.FRAMEBUFFER,null);n.viewport(0,0,i.width,i.height);n.clear(n.COLOR_BUFFER_BIT|n.DEPTH_BUFFER_BIT);y(r.finalComp,i.mainRT);n.uniform1i(r.finalComp.program.uniforms.uBloom,1);n.activeTexture(n.TEXTURE1);n.bindTexture(n.TEXTURE_2D,i.wHalfRT0.texture);p(r.finalComp);w(r.finalComp);n.enable(n.DEPTH_TEST)}function gt(){lt();at();st();wt();it=!0}function rt(){vt();ht();bt();o.position.z=t.area.z+a.nearfar[0];a.angle=Math.atan2(t.area.y,o.position.z+t.area.z)*180/Math.PI*2;l.loadProjection(a.matrix,i.aspect,a.angle,a.nearfar[0],a.nearfar[1])}function ni(){l.loadLookAt(o.matrix,o.position,o.lookat,o.up);n.enable(n.DEPTH_TEST);n.bindFramebuffer(n.FRAMEBUFFER,i.mainRT.frameBuffer);n.viewport(0,0,i.mainRT.width,i.mainRT.height);n.clearColor(.005,0,.05,0);n.clear(n.COLOR_BUFFER_BIT|n.DEPTH_BUFFER_BIT);yt();ct();kt()}function ut(){ft();it&&rt()}function ft(){i.setSize(n.canvas.width,n.canvas.height);n.clearColor(.2,.2,.5,1);n.viewport(0,0,i.width,i.height);var t=function(n,t,r){var u=i[n];u&&et(u);i[n]=ot(t,r)};t(\"mainRT\",i.width,i.height);t(\"wFullRT0\",i.width,i.height);t(\"wFullRT1\",i.width,i.height);t(\"wHalfRT0\",i.halfWidth,i.halfHeight);t(\"wHalfRT1\",i.halfWidth,i.halfHeight)}function g(){var n=new Date;f.elapsed=(n-f.start)/1e3;f.delta=(n-f.prev)/1e3;f.prev=n;s&&requestAnimationFrame(g);ni()}function ti(t,i){if(t){h=i;c=\"string\"==typeof t?document.querySelector(t):t;try{n=c.getContext(\"webgl\")||c.getContext(\"experimental-webgl\")}catch(r){console.error(\"WebGL not supported.\"+r);return}return ft(),gt(),rt(),f.start=new Date,f.prev=f.start,e}}function ii(){return c.style.display=\"\",c.width=window.innerWidth-10,c.height=window.innerHeight-10,ut(),s=1,g(),e}function ri(){return s=0,e}function ui(){return c.style.display=\"none\",s=0,e}var e={},c=null,h={},u={},l={},f,n,i,r,pt,dt,s;u.create=function(n,t,i){return{x:n,y:t,z:i}};u.dot=function(n,t){return n.x*t.x+n.y*t.y+n.z*t.z};u.cross=function(n,t,i){n.x=t.y*i.z-t.z*i.y;n.y=t.z*i.x-t.x*i.z;n.z=t.x*i.y-t.y*i.x};u.normalize=function(n){var t=n.x*n.x+n.y*n.y+n.z*n.z;t>1e-5&&(t=1/Math.sqrt(t),n.x*=t,n.y*=t,n.z*=t)};u.arrayForm=function(n){return n.array?(n.array[0]=n.x,n.array[1]=n.y,n.array[2]=n.z):n.array=new Float32Array([n.x,n.y,n.z]),n.array};l.createIdentity=function(){return new Float32Array([1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1])};l.loadProjection=function(n,t,i,r,u){var f=r*Math.tan(i*Math.PI/180*.5)*2,e=f*t;n[0]=2*r/e;n[1]=0;n[2]=0;n[3]=0;n[4]=0;n[5]=2*r/f;n[6]=0;n[7]=0;n[8]=0;n[9]=0;n[10]=-(u+r)/(u-r);n[11]=-1;n[12]=0;n[13]=0;n[14]=-2*u*r/(u-r);n[15]=0};l.loadLookAt=function(n,t,i,r){var e=u.create(t.x-i.x,t.y-i.y,t.z-i.z),f,o;u.normalize(e);f=u.create(1,0,0);u.cross(f,r,e);u.normalize(f);o=u.create(1,0,0);u.cross(o,e,f);u.normalize(o);n[0]=f.x;n[1]=o.x;n[2]=e.x;n[3]=0;n[4]=f.y;n[5]=o.y;n[6]=e.y;n[7]=0;n[8]=f.z;n[9]=o.z;n[10]=e.z;n[11]=0;n[12]=-(t.x*n[0]+t.y*n[4]+t.z*n[8]);n[13]=-(t.x*n[1]+t.y*n[5]+t.z*n[9]);n[14]=-(t.x*n[2]+t.y*n[6]+t.z*n[10]);n[15]=1};f={start:0,prev:0,delta:0,elapsed:0};i={width:0,height:0,aspect:1,array:new Float32Array(3),halfWidth:0,halfHeight:0,halfArray:new Float32Array(3)};i.setSize=function(n,t){i.width=n;i.height=t;i.aspect=i.width/i.height;i.array[0]=i.width;i.array[1]=i.height;i.array[2]=i.aspect;i.halfWidth=Math.floor(n/2);i.halfHeight=Math.floor(t/2);i.halfArray[0]=i.halfWidth;i.halfArray[1]=i.halfHeight;i.halfArray[2]=i.halfWidth/i.halfHeight};var a={angle:60,nearfar:new Float32Array([.1,100]),matrix:l.createIdentity()},o={position:u.create(0,0,100),lookat:u.create(0,0,0),up:u.create(0,1,0),dof:u.create(10,4,8),matrix:l.createIdentity()},t={},it=!1,v=function(){this.velocity=new Array(3);this.rotation=new Array(3);this.position=new Array(3);this.euler=new Array(3);this.size=1;this.alpha=1;this.zkey=0};return v.prototype.setVelocity=function(n,t,i){this.velocity[0]=n;this.velocity[1]=t;this.velocity[2]=i},v.prototype.setRotation=function(n,t,i){this.rotation[0]=n;this.rotation[1]=t;this.rotation[2]=i},v.prototype.setPosition=function(n,t,i){this.position[0]=n;this.position[1]=t;this.position[2]=i},v.prototype.setEulerAngles=function(n,t,i){this.euler[0]=n;this.euler[1]=t;this.euler[2]=i},v.prototype.setSize=function(n){this.size=n},v.prototype.update=function(n){this.position[0]+=this.velocity[0]*n;this.position[1]+=this.velocity[1]*n;this.position[2]+=this.velocity[2]*n;this.euler[0]+=this.rotation[0]*n;this.euler[1]+=this.rotation[1]*n;this.euler[2]+=this.rotation[2]*n},r={},pt={},dt={},s=1,function(n,t){n[\"r\"+t]=n[\"r\"+t]||n[\"webkitR\"+t]||n[\"mozR\"+t]||n[\"msR\"+t]||n[\"oR\"+t]||function(t){n.setTimeout(t,1e3/60)}}(window,\"equestAnimationFrame\"),Cm.createGetterSetter(e,\"resize\",function(){return ut}),Cm.createGetterSetter(e,\"isRunning\",function(){return s}),Cm.createGetterSetter(e,\"init\",function(){return ti}),Cm.createGetterSetter(e,\"run\",function(){return ii}),Cm.createGetterSetter(e,\"stop\",function(){return ui}),Cm.createGetterSetter(e,\"pause\",function(){return ri}),Cm.createGetterSetter(e,\"canvas\",function(){return c}),e})();","sakura_point_vsh":"\n uniform mat4 uProjection;\n uniform mat4 uModelview;\n uniform vec3 uResolution;\n uniform vec3 uOffset;\n uniform vec3 uDOF; //x:focus distance, y:focus radius, z:max radius\n uniform vec3 uFade; //x:start distance, y:half distance, z:near fade start\n\n attribute vec3 aPosition;\n attribute vec3 aEuler;\n attribute vec2 aMisc; //x:size, y:fade\n\n varying vec3 pposition;\n varying float psize;\n varying float palpha;\n varying float pdist;\n\n //varying mat3 rotMat;\n varying vec3 normX;\n varying vec3 normY;\n varying vec3 normZ;\n varying vec3 normal;\n\n varying float diffuse;\n varying float specular;\n varying float rstop;\n varying float distancefade;\n\n void main(void) {\n // Projection is based on vertical angle\n vec4 pos = uModelview * vec4(aPosition + uOffset, 1.0);\n gl_Position = uProjection * pos;\n gl_PointSize = aMisc.x * uProjection[1][1] / -pos.z * uResolution.y * 0.5;\n\n pposition = pos.xyz;\n psize = aMisc.x;\n pdist = length(pos.xyz);\n palpha = smoothstep(0.0, 1.0, (pdist - 0.1) / uFade.z);\n\n vec3 elrsn = sin(aEuler);\n vec3 elrcs = cos(aEuler);\n mat3 rotx = mat3(\n 1.0, 0.0, 0.0,\n 0.0, elrcs.x, elrsn.x,\n 0.0, -elrsn.x, elrcs.x\n );\n mat3 roty = mat3(\n elrcs.y, 0.0, -elrsn.y,\n 0.0, 1.0, 0.0,\n elrsn.y, 0.0, elrcs.y\n );\n mat3 rotz = mat3(\n elrcs.z, elrsn.z, 0.0,\n -elrsn.z, elrcs.z, 0.0,\n 0.0, 0.0, 1.0\n );\n mat3 rotmat = rotx * roty * rotz;\n normal = rotmat[2];\n\n mat3 trrotm = mat3(\n rotmat[0][0], rotmat[1][0], rotmat[2][0],\n rotmat[0][1], rotmat[1][1], rotmat[2][1],\n rotmat[0][2], rotmat[1][2], rotmat[2][2]\n );\n normX = trrotm[0];\n normY = trrotm[1];\n normZ = trrotm[2];\n\n const vec3 lit = vec3(0.6917144638660746, 0.6917144638660746, -0.20751433915982237);\n\n float tmpdfs = dot(lit, normal);\n if(tmpdfs < 0.0) {\n normal = -normal;\n tmpdfs = dot(lit, normal);\n }\n diffuse = 0.4 + tmpdfs;\n\n vec3 eyev = normalize(-pos.xyz);\n if(dot(eyev, normal) > 0.0) {\n vec3 hv = normalize(eyev + lit);\n specular = pow(max(dot(hv, normal), 0.0), 20.0);\n }\n else {\n specular = 0.0;\n }\n\n rstop = clamp((abs(pdist - uDOF.x) - uDOF.y) / uDOF.z, 0.0, 1.0);\n rstop = pow(rstop, 0.5);\n //-0.69315 = ln(0.5)\n distancefade = min(1.0, exp((uFade.x - pdist) * 0.69315 / uFade.y));\n }\n ","sakura_point_fsh":"\n #ifdef GL_ES\n //precision mediump float;\n precision highp float;\n #endif\n\n uniform vec3 uDOF; //x:focus distance, y:focus radius, z:max radius\n uniform vec3 uFade; //x:start distance, y:half distance, z:near fade start\n\n const vec3 fadeCol = vec3(0.08, 0.03, 0.06);\n\n varying vec3 pposition;\n varying float psize;\n varying float palpha;\n varying float pdist;\n\n //varying mat3 rotMat;\n varying vec3 normX;\n varying vec3 normY;\n varying vec3 normZ;\n varying vec3 normal;\n\n varying float diffuse;\n varying float specular;\n varying float rstop;\n varying float distancefade;\n\n float ellipse(vec2 p, vec2 o, vec2 r) {\n vec2 lp = (p - o) / r;\n return length(lp) - 1.0;\n }\n\n void main(void) {\n vec3 p = vec3(gl_PointCoord - vec2(0.5, 0.5), 0.0) * 2.0;\n vec3 d = vec3(0.0, 0.0, -1.0);\n float nd = normZ.z; //dot(-normZ, d);\n if(abs(nd) < 0.0001) discard;\n\n float np = dot(normZ, p);\n vec3 tp = p + d * np / nd;\n vec2 coord = vec2(dot(normX, tp), dot(normY, tp));\n\n //angle = 15 degree\n const float flwrsn = 0.258819045102521;\n const float flwrcs = 0.965925826289068;\n mat2 flwrm = mat2(flwrcs, -flwrsn, flwrsn, flwrcs);\n vec2 flwrp = vec2(abs(coord.x), coord.y) * flwrm;\n\n float r;\n if(flwrp.x < 0.0) {\n r = ellipse(flwrp, vec2(0.065, 0.024) * 0.5, vec2(0.36, 0.96) * 0.5);\n }\n else {\n r = ellipse(flwrp, vec2(0.065, 0.024) * 0.5, vec2(0.58, 0.96) * 0.5);\n }\n\n if(r > rstop) discard;\n\n vec3 col = mix(vec3(1.0, 0.8, 0.75), vec3(1.0, 0.9, 0.87), r);\n float grady = mix(0.0, 1.0, pow(coord.y * 0.5 + 0.5, 0.35));\n col *= vec3(1.0, grady, grady);\n col *= mix(0.8, 1.0, pow(abs(coord.x), 0.3));\n col = col * diffuse + specular;\n\n col = mix(fadeCol, col, distancefade);\n\n float alpha = (rstop > 0.001)? (0.5 - r / (rstop * 2.0)) : 1.0;\n alpha = smoothstep(0.0, 1.0, alpha) * palpha;\n\n gl_FragColor = vec4(col * 0.5, alpha);\n }\n ","fx_common_vsh":"\n uniform vec3 uResolution;\n attribute vec2 aPosition;\n\n varying vec2 texCoord;\n varying vec2 screenCoord;\n\n void main(void) {\n gl_Position = vec4(aPosition, 0.0, 1.0);\n texCoord = aPosition.xy * 0.5 + vec2(0.5, 0.5);\n screenCoord = aPosition.xy * vec2(uResolution.z, 1.0);\n }\n ","bg_fsh":"\n #ifdef GL_ES\n //precision mediump float;\n precision highp float;\n #endif\n\n uniform vec2 uTimes;\n\n varying vec2 texCoord;\n varying vec2 screenCoord;\n\n void main(void) {\n vec3 col;\n float c;\n vec2 tmpv = texCoord * vec2(0.8, 1.0) - vec2(0.95, 1.0);\n c = exp(-pow(length(tmpv) * 1.8, 2.0));\n col = mix(vec3(0.02, 0.0, 0.03), vec3(0.96, 0.98, 1.0) * 1.5, c);\n gl_FragColor = vec4(col * 0.5, 1.0);\n }\n ","fx_brightbuf_fsh":"\n #ifdef GL_ES\n //precision mediump float;\n precision highp float;\n #endif\n uniform sampler2D uSrc;\n uniform vec2 uDelta;\n\n varying vec2 texCoord;\n varying vec2 screenCoord;\n\n void main(void) {\n vec4 col = texture2D(uSrc, texCoord);\n gl_FragColor = vec4(col.rgb * 2.0 - vec3(0.5), 1.0);\n }\n ","fx_dirblur_r4_fsh":"\n #ifdef GL_ES\n //precision mediump float;\n precision highp float;\n #endif\n uniform sampler2D uSrc;\n uniform vec2 uDelta;\n uniform vec4 uBlurDir; //dir(x, y), stride(z, w)\n\n varying vec2 texCoord;\n varying vec2 screenCoord;\n\n void main(void) {\n vec4 col = texture2D(uSrc, texCoord);\n col = col + texture2D(uSrc, texCoord + uBlurDir.xy * uDelta);\n col = col + texture2D(uSrc, texCoord - uBlurDir.xy * uDelta);\n col = col + texture2D(uSrc, texCoord + (uBlurDir.xy + uBlurDir.zw) * uDelta);\n col = col + texture2D(uSrc, texCoord - (uBlurDir.xy + uBlurDir.zw) * uDelta);\n gl_FragColor = col / 5.0;\n }\n ","pp_final_vsh":"\n uniform vec3 uResolution;\n attribute vec2 aPosition;\n varying vec2 texCoord;\n varying vec2 screenCoord;\n void main(void) {\n gl_Position = vec4(aPosition, 0.0, 1.0);\n texCoord = aPosition.xy * 0.5 + vec2(0.5, 0.5);\n screenCoord = aPosition.xy * vec2(uResolution.z, 1.0);\n }\n ","pp_final_fsh":"\n #ifdef GL_ES\n //precision mediump float;\n precision highp float;\n #endif\n uniform sampler2D uSrc;\n uniform sampler2D uBloom;\n uniform vec2 uDelta;\n varying vec2 texCoord;\n varying vec2 screenCoord;\n void main(void) {\n vec4 srccol = texture2D(uSrc, texCoord) * 2.0;\n vec4 bloomcol = texture2D(uBloom, texCoord);\n vec4 col;\n col = srccol + bloomcol * (vec4(1.0) + srccol);\n col *= smoothstep(1.0, 0.0, pow(length((texCoord - vec2(0.5)) * 2.0), 1.2) * 0.5);\n col = pow(col, vec4(0.45454545454545)); //(1.0 / 2.2)\n\n gl_FragColor = vec4(col.rgb, 1.0);\n gl_FragColor.a = 1.0;\n }\n "}}